{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectLists","projects","Dashboard","this","ProjectList","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4cc23019.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink ligthen-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks) ","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n            });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n\r\n\r\n    return (\r\n\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n\r\n        </ul>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n\r\n\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n\r\n\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\"> MarioPlan </Link>\r\n                {links}\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n\r\n    const { notifications } = props;\r\n\r\n    return (\r\n\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"class-title\"> {project.title} </span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ProjectLists = ({ projects }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n\r\n            {projects && projects.map(project => {\r\n\r\n                return (\r\n\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n\r\n\r\n                )\r\n\r\n\r\n            })}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectLists","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n\r\n        const { projects, auth, notifications, profile } = this.props;\r\n\r\n        if (!auth.uid) { return <Redirect to='/signin' /> }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    const { project } = props;\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\"> {project.title} </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>{project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gre-text text-darken-3\">Sign In</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\"> Login </button>\r\n                    </div>\r\n\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { auth, authError } = this.props;\r\n\r\n        if (auth.uid) { return <Redirect to='/' /> }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gre-text text-darken-3\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\"> Sign Up </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp) \r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gre-text text-darken-3\">Create New Project</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\"> Create </button>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n\r\n\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project: project\r\n            })\r\n\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err: err\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n\n      <BrowserRouter>\n        <div className=\"App\" >\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n\r\n\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error');\r\n\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout success')\r\n            return {\r\n                state\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n\r\n    projects: [\r\n        { id: '1', title: 'Help me find peach', content: 'Hello ma nigga safimesifmsaifmsafimasfimsafismfasimfaifmaifmasim' },\r\n        { id: '2', title: 'Help me find mario', content: 'Hello ma nigga safimesifmsaifmsafimasfimsafismfasimfaifmaifmasim' },\r\n        { id: '3', title: 'Help me find yoshi', content: 'Hello ma nigga safimesifmsaifmsafimasfimsafismfasimfaifmaifmasim' }\r\n\r\n    ]\r\n\r\n\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n\r\n})\r\n\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCHNpICeoQXQYBYpYwLyNoyge5_MQerh4s\",\r\n    authDomain: \"mario-plan-1290c.firebaseapp.com\",\r\n    databaseURL: \"https://mario-plan-1290c.firebaseio.com\",\r\n    projectId: \"mario-plan-1290c\",\r\n    storageBucket: \"mario-plan-1290c.appspot.com\",\r\n    messagingSenderId: \"404793714772\",\r\n    appId: \"1:404793714772:web:7b083b0b250f7936b1a5c1\",\r\n    measurementId: \"G-LEC0BGD6R9\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\n//for render on auth ready\nimport { useSelector } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase';\n\n\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"center\"> <p>Loading Mario Plan...</p></div>;\n  return children\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}